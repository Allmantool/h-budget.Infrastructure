name: db
services:
  event-store-db:
    image: eventstore/eventstore:24.10.5-jammy
    container_name: event-store-db
    environment:
      - EVENTSTORE_INSECURE=true # Allow insecure mode (no certificates)
      - EVENTSTORE_HTTP_PORT=2113 # Admin UI port
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true # Enable AtomPub
      - EVENTSTORE_CLUSTER_SIZE=1 # Single-node cluster
      - EVENTSTORE_RUN_PROJECTIONS=All # Enable all projections
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true # Start standard projections
    ports:
      - "1113:1113" # map internal tcp port
      - "2113:2113" # map internal admin ui port
    volumes:
      - type: volume
        source: eventstore-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-logs
        target: /var/log/eventstore
    networks:
      - event-store-db-net

  kafka:
    image: confluentinc/cp-kafka:8.0.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9997:9997"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      CLUSTER_ID: '5Y7pZQq4Td6Jv4n3z2Z8Zg'
      KAFKA_CLUSTER_ID: '5Y7pZQq4Td6Jv4n3z2Z8Zg'  # Remove duplicate (only need one)
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      # Additional recommended settings:
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    user: "0"  # Run as root temporarily to fix permissions
    networks:
      - kafka-net
      - shared-monitoring-net
    volumes:
      - ${KAFKA_STORE}/data:/var/lib/kafka/data:Z  # SELinux context flag
      # Remove redundant volumes:
      # - ${KAFKA_STORE}:/var/lib/kafka  <-- REDUNDANT
      # - /var/run/docker.sock <-- UNNECESSARY FOR KAFKA
    command: 
      - bash
      - -c
      - |
        chown -R appuser:appuser /var/lib/kafka/data
        exec /etc/confluent/docker/run

  shared-mongo-db:
    image: mongo:7.0.21-rc0-jammy
    container_name: shared-mongo-db
    restart: always
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=admin
    ports:
      - "27017:27017"
    volumes:
      - ${MONGO_DB_VOLUME_PATH}:/data/db
    networks:
      - mongo-network
      - shared-monitoring-net

  #
  #  homebudget-sql-server:
  #    image: "mcr.microsoft.com/mssql/server:2022-latest"
  #    container_name: homebudget-sql-server
  #    environment:
  #      ACCEPT_EULA: "Y"
  #      SA_PASSWORD: ${SQL_PASSWORD}
  #    ports:
  #      - "1433:1433"
  #    volumes:
  #      - ${SQL_VOLUME_PATH}:/var/opt/mssql/data
  #    networks:
  #      - mssql-network
  #

  wms-sql-server:
    image: "mcr.microsoft.com/mssql/server:2025-latest"
    container_name: wms-sql-server
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${WMS_SQL_PASSWORD}
    ports:
      - "${SQL_SERVER_PORT}:1433"
    volumes:
      - ${SQL_WMS_VOLUME_PATH}:/var/opt/mssql/data
    networks:
      - mssql-network
      - shared-monitoring-net
