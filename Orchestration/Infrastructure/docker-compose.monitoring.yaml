name: monitoring
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.52.0
    networks:
      - rates-api-network
      - mongo-network
      - kafka-net
    ports:
      - 9090:9090
    volumes:
      - ${PROMETHEUS_CONFIG}:/etc/prometheus/prometheus.yml
    depends_on:
      - homebudget-rates-api
      - homebudget-accounting-api

  grafana:
    container_name: grafana
    image: grafana/grafana:11.0.0-ubuntu
    networks:
      - rates-api-network
      - accounting-api-network
      - mongo-network
      - mssql-network
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_INSTALL_PLUGINS: "grafana-clock-panel"
    ports:
      - 3000:3000
    volumes:
      - ${GRAFANA_CONFIG}:/etc/grafana/provisioning.yml
    depends_on:
      - prometheus
      - homebudget-sql-server

  mongo-db-exporter:
    image: percona/mongodb_exporter:0.40
    container_name: mongo-db-exporter
    command:
      - "--mongodb.global-conn-pool"
      - "--collector.diagnosticdata"
      - "--discovering-mode"
      - "--compatible-mode"
      - "--mongodb.collstats-colls=admin.companies,admin.restaurnts"
      - "--collect-all"
    environment:
      - MONGODB_URI=mongodb://mongoadmin:${MONGO_DB_PASSWORD}@homebudget-mongo-db:27017
    restart: unless-stopped
    ports:
      - "9216:9216"
      - "17001:17001"
    networks:
      - mongo-network
    depends_on:
      - prometheus

  kafka-exporter:
    image: bitnami/kafka-exporter:1.7.0
    container_name: kafka-exporter
    command:
      - "--kafka.server=kafka:9092"
    ports:
      - 9308:9308
    networks:
      - kafka-net
    depends_on:
      - prometheus
      - kafka
