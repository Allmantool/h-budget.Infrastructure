version: "3.9"

services:
  elasticsearch:
    image: elasticsearch:8.10.4
    container_name: homebudget-elasticsearch
    ports:
      - 9250:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.watcher.enabled=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - elastic-network

  filebeat:
    image: elastic/filebeat:8.11.0
    container_name: homebudget-filebeat
    ports:
      - 9350:80
    volumes:
      - ${ELK_FILEBEAT_CONFIG}:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - registry:/usr/share/filebeat/data:rw
    networks:
      - elastic-network

  homebudget-sql-server:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: homebudget-sql-server
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SQL_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - ${SQL_VOLUME_PATH}:/var/opt/mssql/data
    networks:
      - mssql-network

  flyway:
    image: flyway/flyway:8.5.2
    container_name: homebudget-flyway-migration
    command: -url=jdbc:sqlserver://homebudget-sql-server -schemas=homebudget-schema -mixed=true -baselineOnMigrate=true -user=sa -password=${SQL_PASSWORD} -connectRetries=5 migrate
    volumes:
      - ${FLYWAY_SCRIPTS_PATH}:/flyway/sql
    networks:
      - mssql-network
    depends_on:
      - homebudget-sql-server

  redis_server:
    image: redis:7.0.7
    container_name: homebudget-cache
    ports:
      - "6379:6379"
    networks:
      - redis-network
    depends_on:
      - homebudget-sql-server

  kibana:
    image: kibana:8.10.4
    container_name: homebudget-kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9250
    networks:
      - elastic-network
    depends_on:
      - elasticsearch

  homebudget-rates-api:
    image: allmantool/homebudget-rates-api:${RATES_API_IMAGE_V}
    container_name: homebudget-rates-api
    build:
      context: Api\HomeBudget-Rates-Api\
      dockerfile: dockerfile
      args:
        - SONAR_TOKEN=${SONAR_TOKEN}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - GITHUB_RUN_ID=${GITHUB_RUN_ID}
        - PULL_REQUEST_ID=${PULL_REQUEST_ID}
        - PULL_REQUEST_SOURCE_BRANCH=${PULL_REQUEST_SOURCE_BRANCH}
        - PULL_REQUEST_TARGET_BRANCH=${PULL_REQUEST_TARGET_BRANCH}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      # - ASPNETCORE_HTTPS_PORT=5008
      # - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5207:80"
      - "5208:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${RATES_API_JSON_PATH}:/app/appsettings.json:ro
    networks:
      - elastic-network
      - redis-network
      - mssql-network
      - rates-api-network
      - ui-network
    depends_on:
      - homebudget-sql-server
      - redis_server
      - elasticsearch
      - kibana

  homebudget-accounting-api:
    image: allmantool/homebudget-accounting-api:${ACCOUNTING_API_IMAGE_V}
    container_name: homebudget-accounting-api
    build:
      context: Api\HomeBudget-Accounting-Api\
      dockerfile: dockerfile
      args:
        - SONAR_TOKEN=${SONAR_TOKEN}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
        - GITHUB_RUN_ID=${GITHUB_RUN_ID}
        - PULL_REQUEST_ID=${PULL_REQUEST_ID}
        - PULL_REQUEST_SOURCE_BRANCH=${PULL_REQUEST_SOURCE_BRANCH}
        - PULL_REQUEST_TARGET_BRANCH=${PULL_REQUEST_TARGET_BRANCH}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      # - ASPNETCORE_HTTPS_PORT=5008
      # - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5307:80"
      - "5308:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${ACCOUNTING_API_JSON_PATH}:/app/appsettings.json:ro
    networks:
      - elastic-network
      - redis-network
      - mssql-network
      - accounting-api-network
      - ui-network
    depends_on:
      - homebudget-sql-server
      - redis_server
      - elasticsearch
      - kibana

  homebudget-ui:
    image: allmantool/homebudget-ui:${UI_IMAGE_V}
    container_name: homebudget-ui
    build:
      context: UI\
      dockerfile: dockerfile
      args:
        - SONAR_TOKEN=${SONAR_TOKEN}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    ports:
      - "5407:80"
      - "5408:443"
    volumes:
      - ${UI_JSON_PATH}:/usr/share/nginx/html/config.json:ro
      - ${NGINX_CONFIG}:/etc/nginx/nginx.conf:ro
    networks:
      - elastic-network
      - accounting-api-network
      - rates-api-network
      - ui-network
    depends_on:
      - homebudget-sql-server
      - redis_server
      - elasticsearch
      - kibana

networks:
  accounting-api-network:
    driver: bridge
  rates-api-network:
    driver: bridge
  elastic-network:
    driver: bridge
  redis-network:
    driver: bridge
  mssql-network:
    driver: bridge
  ui-network:
    driver: bridge

volumes:
  elasticsearch-data:
  registry:
